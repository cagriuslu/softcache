# options
LIBRARY_NAME          = softcache
COMMON_COMPILER_FLAGS = -g -Wall -Wextra
C_COMPILER_FLAGS      = -std=c11
CPP_COMPILER_FLAGS    = -std=c++11
INCLUDE_DIRECTORIES   =
LINKER_FLAGS          =
IS_HEADER_ONLY        = Y

# executables
CC=gcc
CP=g++
RM=rm
MKDIR=mkdir
AR=ar
LD=ld

# directories
SRCDIR=src
OBJDIR=obj
BINDIR=bin
LIBDIR=lib
TESTDIR=test
INCDIR=include

# import library source files
C_SRCFILES=$(wildcard $(SRCDIR)/*.c)
C_OBJFILES=$(patsubst $(SRCDIR)/%.c,$(OBJDIR)/%_c.o,$(C_SRCFILES))
C_PICOBJFILES=$(patsubst $(SRCDIR)/%.c,$(OBJDIR)/%_c_pic.o,$(C_SRCFILES))

CC_SRCFILES=$(wildcard $(SRCDIR)/*.cc)
CC_OBJFILES=$(patsubst $(SRCDIR)/%.cc,$(OBJDIR)/%_cc.o,$(CC_SRCFILES))
CC_PICOBJFILES=$(patsubst $(SRCDIR)/%.cc,$(OBJDIR)/%_cc_pic.o,$(CC_SRCFILES))

CPP_SRCFILES=$(wildcard $(SRCDIR)/*.cpp)
CPP_OBJFILES=$(patsubst $(SRCDIR)/%.cpp,$(OBJDIR)/%_cpp.o,$(CPP_SRCFILES))
CPP_PICOBJFILES=$(patsubst $(SRCDIR)/%.cpp,$(OBJDIR)/%_cpp_pic.o,$(CPP_SRCFILES))

# import binary source files
ifneq ($(IS_HEADER_ONLY),Y)
C_TESTSRCFILES=$(wildcard $(TESTDIR)/*.c)
C_TESTSTATICBINFILES=$(patsubst $(TESTDIR)/%.c,$(BINDIR)/%_static,$(C_TESTSRCFILES))
C_TESTSHAREDBINFILES=$(patsubst $(TESTDIR)/%.c,$(BINDIR)/%_shared,$(C_TESTSRCFILES))

CC_TESTSRCFILES=$(wildcard $(TESTDIR)/*.cc)
CC_TESTSTATICBINFILES=$(patsubst $(TESTDIR)/%.cc,$(BINDIR)/%_static,$(CC_TESTSRCFILES))
CC_TESTSHAREDBINFILES=$(patsubst $(TESTDIR)/%.cc,$(BINDIR)/%_shared,$(CC_TESTSRCFILES))

CPP_TESTSRCFILES=$(wildcard $(TESTDIR)/*.cpp)
CPP_TESTSTATICBINFILES=$(patsubst $(TESTDIR)/%.cpp,$(BINDIR)/%_static,$(CPP_TESTSRCFILES))
CPP_TESTSHAREDBINFILES=$(patsubst $(TESTDIR)/%.cpp,$(BINDIR)/%_shared,$(CPP_TESTSRCFILES))
else
C_TESTSRCFILES=$(wildcard $(TESTDIR)/*.c)
C_TESTSTATICBINFILES=$(patsubst $(TESTDIR)/%.c,$(BINDIR)/%,$(C_TESTSRCFILES))

CC_TESTSRCFILES=$(wildcard $(TESTDIR)/*.cc)
CC_TESTSTATICBINFILES=$(patsubst $(TESTDIR)/%.cc,$(BINDIR)/%,$(CC_TESTSRCFILES))

CPP_TESTSRCFILES=$(wildcard $(TESTDIR)/*.cpp)
CPP_TESTSTATICBINFILES=$(patsubst $(TESTDIR)/%.cpp,$(BINDIR)/%,$(CPP_TESTSRCFILES))
endif

# configurations
ifneq ($(IS_HEADER_ONLY),Y)
all: $(OBJDIR) $(LIBDIR) $(BINDIR) $(LIBDIR)/lib$(LIBRARY_NAME).a $(LIBDIR)/lib$(LIBRARY_NAME).so $(C_TESTSTATICBINFILES) $(C_TESTSHAREDBINFILES) $(CC_TESTSTATICBINFILES) $(CC_TESTSHAREDBINFILES) $(CPP_TESTSTATICBINFILES) $(CPP_TESTSHAREDBINFILES)
else
all: $(OBJDIR) $(LIBDIR) $(BINDIR) $(C_TESTSTATICBINFILES) $(C_TESTSHAREDBINFILES) $(CC_TESTSTATICBINFILES) $(CC_TESTSHAREDBINFILES) $(CPP_TESTSTATICBINFILES) $(CPP_TESTSHAREDBINFILES)
endif

clean:
	$(RM) -rf $(BINDIR)
	$(RM) -rf $(OBJDIR)
	$(RM) -rf $(LIBDIR)

# compile library source
$(OBJDIR)/%_c.o: $(SRCDIR)/%.c
	$(CC) $(COMMON_COMPILER_FLAGS) $(C_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) -c $< -o $@

$(OBJDIR)/%_c_pic.o: $(SRCDIR)/%.c
	$(CC) $(COMMON_COMPILER_FLAGS) $(C_COMPILER_FLAGS) -fPIC $(INCLUDE_DIRECTORIES) -I$(INCDIR) -c $< -o $@

$(OBJDIR)/%_cc.o: $(SRCDIR)/%.cc
	$(CP) $(COMMON_COMPILER_FLAGS) $(CPP_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) -c $< -o $@

$(OBJDIR)/%_cc_pic.o: $(SRCDIR)/%.cc
	$(CP) $(COMMON_COMPILER_FLAGS) $(CPP_COMPILER_FLAGS) -fPIC $(INCLUDE_DIRECTORIES) -I$(INCDIR) -c $< -o $@

$(OBJDIR)/%_cpp.o: $(SRCDIR)/%.cpp
	$(CP) $(COMMON_COMPILER_FLAGS) $(CPP_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) -c $< -o $@

$(OBJDIR)/%_cpp_pic.o: $(SRCDIR)/%.cpp
	$(CP) $(COMMON_COMPILER_FLAGS) $(CPP_COMPILER_FLAGS) -fPIC $(INCLUDE_DIRECTORIES) -I$(INCDIR) -c $< -o $@

# create libraries
$(LIBDIR)/lib$(LIBRARY_NAME).a: $(C_OBJFILES) $(CC_OBJFILES) $(CPP_OBJFILES)
	$(AR) rcsv $@ $(C_OBJFILES) $(CC_OBJFILES) $(CPP_OBJFILES)

$(LIBDIR)/lib$(LIBRARY_NAME).so: $(C_PICOBJFILES) $(CC_PICOBJFILES) $(CPP_PICOBJFILES)
	$(CP) -shared -fPIC $(C_PICOBJFILES) $(CC_PICOBJFILES) $(CPP_PICOBJFILES) -o $@

ifneq ($(IS_HEADER_ONLY),Y)
TESTSELFLINK_STATIC=-L$(LIBDIR) -Wl,-Bstatic -l$(LIBRARY_NAME) -Wl,-Bdynamic
TESTSELFLINK_SHARED=-L$(LIBDIR) -l$(LIBRARY_NAME)
endif

# build binaries
$(BINDIR)/%_static: $(TESTDIR)/%.c
	$(CC) $(COMMON_COMPILER_FLAGS) $(C_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) $< $(TESTSELFLINK_STATIC) $(LINKER_FLAGS) -o $@

$(BINDIR)/%_shared: $(TESTDIR)/%.c
	$(CC) $(COMMON_COMPILER_FLAGS) $(C_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) $< $(TESTSELFLINK_SHARED) $(LINKER_FLAGS) -o $@

$(BINDIR)/%_static: $(TESTDIR)/%.cc
	$(CP) $(COMMON_COMPILER_FLAGS) $(CPP_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) $< $(TESTSELFLINK_STATIC) $(LINKER_FLAGS) -o $@

$(BINDIR)/%_shared: $(TESTDIR)/%.cc
	$(CP) $(COMMON_COMPILER_FLAGS) $(CPP_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) $< $(TESTSELFLINK_SHARED) $(LINKER_FLAGS) -o $@

$(BINDIR)/%_static: $(TESTDIR)/%.cpp
	$(CP) $(COMMON_COMPILER_FLAGS) $(CPP_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) $< $(TESTSELFLINK_STATIC) $(LINKER_FLAGS) -o $@

$(BINDIR)/%_shared: $(TESTDIR)/%.cpp
	$(CP) $(COMMON_COMPILER_FLAGS) $(CPP_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) $< $(TESTSELFLINK_SHARED) $(LINKER_FLAGS) -o $@

$(BINDIR)/%: $(TESTDIR)/%.c
	$(CC) $(COMMON_COMPILER_FLAGS) $(C_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) $< $(LINKER_FLAGS) -o $@

$(BINDIR)/%: $(TESTDIR)/%.cc
	$(CP) $(COMMON_COMPILER_FLAGS) $(CPP_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) $< $(LINKER_FLAGS) -o $@

$(BINDIR)/%: $(TESTDIR)/%.cpp
	$(CP) $(COMMON_COMPILER_FLAGS) $(CPP_COMPILER_FLAGS) $(INCLUDE_DIRECTORIES) -I$(INCDIR) $< $(LINKER_FLAGS) -o $@

# mkdir
$(OBJDIR):
	$(MKDIR) -p $(OBJDIR)
$(LIBDIR):
	$(MKDIR) -p $(LIBDIR)
$(BINDIR):
	$(MKDIR) -p $(BINDIR)
